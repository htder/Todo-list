(()=>{"use strict";const e=function(e,t,n,o,r,c){const s={};return s.title=e,s.description=t,s.dueDate=n,s.completed=o,s.priority=r,s.project=c,s.due=function(){return`${e} due: ${n}`},s},t=function(e){const t={};return t.title=e,t},n={tasks:[e("Hello World","one two three","2022-01-21",!0,"high","All"),e("World Hello","one two three","2022-02-01",!1,"low","Project 2"),e("One One One","One Hello","2022-09-17",!0,"middle","Project 2"),e("Two Two Two","Two Hello","2022-01-09",!1,"high","Project 3"),e("Three Three Three","Three Hello","2022-12-25",!1,"high","All")],projects:[t("All"),t("Project 2"),t("Project 3")]};document.querySelector(".sidebar").addEventListener("click",(e=>{Array.from(document.querySelectorAll(".menu-button")).forEach((e=>e.classList.remove("active"))),null!==e.target.closest("a")&&e.target.closest("a").classList.add("active")})),function(){const e=document.querySelector(".project-modal"),c=document.querySelector(".new-project-button"),s=document.querySelector(".project-modal-close"),i=document.querySelector(".project-submit"),l=document.getElementById("new-project-form");c.addEventListener("click",(()=>{a()})),s.addEventListener("click",(()=>{d()})),i.addEventListener("click",(e=>{e.preventDefault();const c=l.title;if(o.checkTitle(c)){const e=t(c.value);n.projects.push(e),r.addProjectToView(e),o.clearForm(l),d()}}));const a=function(){e.classList.remove("hide"),e.classList.add("show")},d=function(){e.classList.remove("show"),e.classList.add("hide")}}();const o={checkTitle:e=>{let t=!1;return""===e.value.trim()?e.classList.add("error"):(e.classList.remove("error"),t=!0),t},clearForm:e=>{e.title.value=""}},r=function(){const e=document.querySelector(".project-menu"),t=document.querySelector(".form-project-selector");return{addProjectToView:t=>{e.appendChild((e=>{const t=`\n      <a href="#" class="nav-link menu-button link-dark rounded">\n        <img\n          class="bi me-2"\n          width="16"\n          height="16"\n          src="../icons/arrow-right-short.svg"\n        /><span class="d-none d-sm-inline">${e.title}</span></a\n      >`,n=document.createElement("li");return n.classList="nav-item m-1",n.innerHTML=t,n})(t))},addProjectToTodoSelectorForm:()=>{let e="";n.projects.forEach((t=>{e+=`<option>${t.title}</option>`})),t.innerHTML=e}}}(),c=(function(){const t=document.querySelector(".task-modal"),o=document.querySelector(".todo-new-task"),i=document.querySelector(".todo-modal-close"),l=document.getElementById("new-todo-form"),a=document.querySelector(".todo-submit");o.addEventListener("click",(()=>{r.addProjectToTodoSelectorForm(),d()})),i.addEventListener("click",(()=>{u()})),a.addEventListener("click",(t=>{t.preventDefault();const o=document.querySelector(".form-project-selector"),r=l.title,i=l.description,a=l.dueDate,d=o.options[o.selectedIndex].value,m=l.optradio.value;let p=c.checkTitle(r),h=c.checkDescription(i),g=c.checkDate(a);if(p&&h&&g){const t=e(r.value,i.value,a.value,!1,m,d);n.tasks.push(t),s.addTodoToView(t),c.clearForm(l),u()}}));const d=()=>{t.classList.remove("hide"),t.classList.add("show")},u=()=>{t.classList.remove("show"),t.classList.add("hide")}}(),function(){const e=e=>""===e,t=(e,t)=>{document.querySelector(".dateError").textContent=t};return{checkTitle:t=>{let n=!1;const o=t.value.trim();return e(o)?("Title cannot be empty.",document.querySelector(".titleError").textContent="Title cannot be empty."):(document.querySelector(".titleError").textContent="",n=!0),n},checkDescription:t=>{let n=!1;const o=t.value.trim();return e(o)?("Description cannot be empty.",document.querySelector(".descError").textContent="Description cannot be empty."):(document.querySelector(".descError").textContent="",n=!0),n},checkDate:n=>{let o=!1;const r=n.value.trim();return console.log(r),e(r)&&t(0,"Due date cannot be empty"),(e=>{const t=new Date(`${e}`),[n,o,r]=e.split("-"),c=new Date,s=c.getDate(),i=c.getMonth()+1;return!(+n===c.getFullYear()&&+o===i&&+r===s||t>c)})(r)?t(0,"Due date must be in the future."):(document.querySelector(".dateError").textContent="",o=!0),o},clearForm:e=>{e.title.value="",e.description.value="",e.dueDate.value=""}}}()),s=function(){const e=document.querySelector(".todo-container");return{addTodoToView:t=>{e.firstElementChild.insertAdjacentElement("beforebegin",(e=>{const t=`\n    <div\n    class="col-md-1 py-1 d-flex justify-content-md-end justify-content-center"\n  >\n    <input type="checkbox" class="task-checkbox" ${e.completed?"checked":""}/>\n  </div>\n  <div\n    class="col-md-6 d-flex align-items-center justify-content-md-start justify-content-center"\n  >\n    ${e.completed?`<del>${e.title}</del>`:`${e.title}`}\n  </div>\n    <div\n        class="col-md-1 d-flex align-items-center justify-md-start justify-content-center task-arrow"\n         >\n        <img\n         class="task-arrow-image-down"\n         width="16"\n         height="16"\n         src="../icons/caret-down.svg"\n         />\n    </div>\n  <div\n    class="col-md-2 d-flex align-items-center justify-content-md-start justify-content-center"\n  >\n    ${e.dueDate}\n  </div>\n  <div\n    class="col-md-1 d-flex align-items-center justify-md-start justify-content-center"\n  >\n      <img\n        class="task-edit"\n        width="16"\n        height="16"\n        src="../icons/pencil-square.svg"\n      />\n\n  </div>\n  <div\n    class="col-md-1 d-flex align-items-center justify-md-start justify-content-center"\n  >\n    <a href="#" class="nav-link link-dark">\n      <img\n        class=""\n        width="16"\n        height="16"\n        src="../icons/trash.svg"\n      />\n    </a>\n  </div>`,n=document.createElement("div");return n.classList="row m-4 p-2 bg-white rounded-3 border-bottom",n.innerHTML=t,n})(t))}}}(),i=(function(){document.querySelector(".todo-main-container").addEventListener("click",(r=>{const c=r.target.classList.contains("task-checkbox"),s=r.target.classList.contains("task-arrow-image-down")||r.target.classList.contains("task-arrow-image-up"),l=r.target.classList.contains("task-edit");if(r.target.classList.contains("task-delete"),c){const e=Array.from(r.target.parentNode.parentNode.childNodes),t=e[3].textContent.trim(),o=e[7].textContent.trim(),c=n.tasks.filter((e=>e.title===t&&e.dueDate===o));c[0].completed=!c[0].completed,c[0].completed?e[3].innerHTML=`<del>${e[3].innerHTML}</del>`:e[3].innerHTML=e[3].innerHTML.replace(/(<([^>]+)>)/gi,"")}if(s){let c,s,i;if(r.target.classList.contains("task-arrow-image-down")){const t=Array.from(r.target.parentNode.parentNode.childNodes);let l=r.target.parentNode;i=r.target.parentNode.parentNode,c=t[3].textContent.trim(),s=t[7].textContent.trim(),l.innerHTML=e(),console.log(c,s);const a=n.tasks.filter((e=>e.title===c&&e.dueDate===s));console.log(a);const d=o(a);i.insertAdjacentElement("afterend",d)}if(r.target.classList.contains("task-arrow-image-up")){const e=Array.from(r.target.parentNode.parentNode.childNodes);let n=r.target.parentNode;i=r.target.parentNode.parentNode,c=e[3].textContent.trim(),s=e[7].textContent.trim(),n.innerHTML=t(),i.nextElementSibling.remove()}}if(l){const e=Array.from(r.target.parentNode.parentNode.childNodes);let t=e[3].textContent.trim(),o=e[7].textContent.trim();const c=n.tasks.filter((e=>e.title===t&&e.dueDate===o));console.log(e),console.log(c),i.fillForm(c),i.open()}}));const e=()=>'\n    <img\n        class="task-arrow-image-up"\n        width="16"\n        height="16"\n        src="../icons/caret-up.svg"\n    />',t=()=>'\n    <img\n        class="task-arrow-image-down"\n        width="16"\n        height="16"\n        src="../icons/caret-down.svg"\n    />',o=e=>{console.log(e);const t=`\n    <div class="container-fluid py-1">\n      <h6 class="fw-bold">Description</h6>\n      <p class="">\n      ${e[0].description}\n      </p>\n  </div>`,n=document.createElement("div");return n.classList="modal-body mx-5 my-3 bg-light rounded-3 border border-secondary p-3 rounded-3 description-div",n.innerHTML=t,n}}(),function(){const t=document.querySelector(".edit-modal"),o=document.getElementById("edit-modal-form"),r=document.querySelector(".edit-submit"),s=document.querySelector(".edit-cancel"),i=()=>{t.classList.remove("show"),t.classList.add("hide")};return{open:()=>{t.classList.remove("hide"),t.classList.add("show")},close:i,fillForm:t=>{o.title.value=t[0].title,o.description.value=t[0].description,o.dueDate.value=t[0].dueDate,s.addEventListener("click",(()=>{c.clearForm(o),i()})),r.addEventListener("click",(r=>{r.preventDefault();const s=o.title,l=o.description,a=o.dueDate;let d=c.checkTitle(s),u=c.checkDescription(l),m=c.checkDate(a);if(d&&u&&m){e(s.value,l.value,a.value,t.completed,t.priority,t.project);const r=n.tasks.indexOf(t);console.log(r),c.clearForm(o),i()}}))}}}());n.projects.forEach((e=>r.addProjectToView(e))),n.tasks.forEach((e=>s.addTodoToView(e)))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,