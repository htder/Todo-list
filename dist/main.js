(()=>{"use strict";const e=function(e,t,n,o,c,r){const s={};return s.title=e,s.description=t,s.dueDate=n,s.completed=o,s.priority=c,s.project=r,s.due=function(){return`${e} due: ${n}`},s},t=function(e){const t={};return t.title=e,t},n={tasks:[e("Hello World","one two three","2022-01-21",!1,"high","All"),e("World Hello","one two three","2022-02-01",!1,"low","Project 2"),e("One One One","one two three","2022-09-17",!1,"middle","Project 2"),e("Two Two Two","one two three","2022-01-09",!1,"high","Project 3"),e("Three Three Three","one two three","2022-12-25",!1,"high","All")],projects:[t("All"),t("Project 2"),t("Project 3")]};document.querySelector(".sidebar").addEventListener("click",(e=>{Array.from(document.querySelectorAll(".menu-button")).forEach((e=>e.classList.remove("active"))),e.target.closest("a").classList.add("active")})),function(){const e=document.querySelector(".project-modal"),r=document.querySelector(".new-project-button"),s=document.querySelector(".project-modal-close"),i=document.querySelector(".project-submit"),l=document.getElementById("new-project-form");r.addEventListener("click",(()=>{d()})),s.addEventListener("click",(()=>{a()})),i.addEventListener("click",(e=>{e.preventDefault();const r=l.title;if(o.checkTitle(r)){const e=t(r.value);n.projects.push(e),c.addProjectToView(e),o.clearForm(l),a()}}));const d=function(){e.classList.remove("hide"),e.classList.add("show")},a=function(){e.classList.remove("show"),e.classList.add("hide")}}();const o={checkTitle:e=>{let t=!1;return""===e.value.trim()?e.classList.add("error"):(e.classList.remove("error"),t=!0),t},clearForm:e=>{e.title.value=""}},c=function(){const e=document.querySelector(".project-menu"),t=document.querySelector(".form-project-selector");return{addProjectToView:t=>{e.appendChild((e=>{const t=`\n      <a href="#" class="nav-link menu-button link-dark rounded">\n        <img\n          class="bi me-2"\n          width="16"\n          height="16"\n          src="../icons/arrow-right-short.svg"\n        /><span class="d-none d-sm-inline">${e.title}</span></a\n      >`,n=document.createElement("li");return n.classList="nav-item m-1",n.innerHTML=t,n})(t))},addProjectToTodoSelectorForm:()=>{let e="";n.projects.forEach((t=>{e+=`<option>${t.title}</option>`})),t.innerHTML=e}}}(),r=(function(){const t=document.querySelector(".task-modal"),o=document.querySelector(".todo-new-task"),i=document.querySelector(".todo-modal-close"),l=document.getElementById("new-todo-form"),d=document.querySelector(".todo-submit");o.addEventListener("click",(()=>{c.addProjectToTodoSelectorForm(),a()})),i.addEventListener("click",(()=>{u()})),d.addEventListener("click",(t=>{t.preventDefault();const o=document.querySelector(".form-project-selector"),c=l.title,i=l.description,d=l.dueDate,a=o.options[o.selectedIndex].value,m=l.optradio.value;let h=r.checkTitle(c),v=r.checkDescription(i),f=r.checkDate(d);if(h&&v&&f){const t=e(c.value,i.value,d.value,!1,m,a);n.tasks.push(t),s.addTodoToView(t),r.clearForm(l),u()}}));const a=()=>{t.classList.remove("hide"),t.classList.add("show")},u=()=>{t.classList.remove("show"),t.classList.add("hide")}}(),function(){const e=e=>""===e,t=(e,t)=>{document.querySelector(".dateError").textContent=t};return{checkTitle:t=>{let n=!1;const o=t.value.trim();return e(o)?("Title cannot be empty.",document.querySelector(".titleError").textContent="Title cannot be empty."):(document.querySelector(".titleError").textContent="",n=!0),n},checkDescription:t=>{let n=!1;const o=t.value.trim();return e(o)?("Description cannot be empty.",document.querySelector(".descError").textContent="Description cannot be empty."):(document.querySelector(".descError").textContent="",n=!0),n},checkDate:n=>{let o=!1;const c=n.value.trim();return e(c)&&t(0,"Due date cannot be empty"),(e=>{const[t,n,o]=e.split("-"),c=new Date,r=c.getDate(),s=c.getMonth()+1;return!(+t>=c.getFullYear()&&+n>=s&&+o>=r)})(c)?t(0,"Due date must be in the future."):(document.querySelector(".dateError").textContent="",o=!0),o},clearForm:e=>{e.title.value="",e.description.value="",e.dueDate.value=""}}}()),s=function(){const e=document.querySelector(".todo-container");return{addTodoToView:t=>{e.firstElementChild.insertAdjacentElement("beforebegin",(e=>{const t=`\n    <div\n    class="col-md-1 py-1 d-flex justify-content-md-end justify-content-center"\n  >\n    <input type="checkbox" />\n  </div>\n  <div\n    class="col-md-6 d-flex align-items-center justify-content-md-start justify-content-center"\n  >\n    ${e.title}\n  </div>\n  <div\n    class="col-md-1 d-flex align-items-center justify-md-start justify-content-center"\n  >\n    <a href="#" class="nav-link link-dark">\n      <img\n        class=""\n        width="16"\n        height="16"\n        src="../icons/caret-down.svg"\n      />\n    </a>\n  </div>\n  <div\n    class="col-md-2 d-flex align-items-center justify-content-md-start justify-content-center"\n  >\n    ${e.dueDate}\n  </div>\n  <div\n    class="col-md-1 d-flex align-items-center justify-md-start justify-content-center"\n  >\n    <a href="#" class="nav-link link-dark">\n      <img\n        class=""\n        width="16"\n        height="16"\n        src="../icons/pencil-square.svg"\n      />\n    </a>\n  </div>\n  <div\n    class="col-md-1 d-flex align-items-center justify-md-start justify-content-center"\n  >\n    <a href="#" class="nav-link link-dark">\n      <img\n        class=""\n        width="16"\n        height="16"\n        src="../icons/trash.svg"\n      />\n    </a>\n  </div>`,n=document.createElement("div");return n.classList="row m-4 p-2 bg-white rounded-3 border-bottom",n.innerHTML=t,n})(t))}}}();n.projects.forEach((e=>c.addProjectToView(e))),n.tasks.forEach((e=>s.addTodoToView(e)))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,