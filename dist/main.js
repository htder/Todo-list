(()=>{"use strict";const e=function(e){const t={};return t.title=e,t},t={tasks:[],projects:[e("All"),e("Project 2"),e("Project 3")]};document.querySelector(".sidebar").addEventListener("click",(e=>{Array.from(document.querySelectorAll(".menu-button")).forEach((e=>e.classList.remove("active"))),e.target.closest("a").classList.add("active")})),function(){const c=document.querySelector(".project-modal"),n=document.querySelector(".new-project-button"),s=document.querySelector(".project-modal-close"),l=document.querySelector(".project-submit"),i=document.getElementById("new-project-form");n.addEventListener("click",(()=>{d()})),s.addEventListener("click",(()=>{u()})),l.addEventListener("click",(c=>{c.preventDefault();const n=i.title;if(o.checkTitle(n)){const c=e(n.value);t.projects.push(c),r.addProjectToView(c),o.clearForm(i),u()}}));const d=function(){c.classList.remove("hide"),c.classList.add("show")},u=function(){c.classList.remove("show"),c.classList.add("hide")}}();const o={checkTitle:e=>{let t=!1;return""===e.value.trim()?e.classList.add("error"):(e.classList.remove("error"),t=!0),t},clearForm:e=>{e.title.value=""}},r=function(){const e=document.querySelector(".project-menu"),o=document.querySelector(".form-project-selector");return{addProjectToView:t=>{e.appendChild((e=>{const t=`\n      <a href="#" class="nav-link menu-button link-dark rounded">\n        <img\n          class="bi me-2"\n          width="16"\n          height="16"\n          src="../icons/arrow-right-short.svg"\n        /><span class="d-none d-sm-inline">${e.title}</span></a\n      >`,o=document.createElement("li");return o.classList="nav-item m-1",o.innerHTML=t,o})(t))},addProjectToTodoSelectorForm:()=>{let e="";t.projects.forEach((t=>{e+=`<option>${t.title}</option>`})),o.innerHTML=e}}}(),c=(function(){const e=document.querySelector(".task-modal"),o=document.querySelector(".todo-new-task"),n=document.querySelector(".todo-modal-close"),s=document.getElementById("new-todo-form"),l=document.querySelector(".todo-submit");o.addEventListener("click",(()=>{r.addProjectToTodoSelectorForm(),i()})),n.addEventListener("click",(()=>{d()})),l.addEventListener("click",(e=>{e.preventDefault();const o=document.querySelector(".form-project-selector"),r=s.title,n=s.description,l=s.dueDate,i=o.options[o.selectedIndex].value,u=s.optradio.value;let a=c.checkTitle(r),m=c.checkDescription(n),p=c.checkDate(l);if(a&&m&&p){const e=function(e,t,o,r,c,n){const s={};return s.title=e,s.description=t,s.dueDate=o,s.completed=!1,s.priority=c,s.project=n,s.due=function(){return`${e} due: ${o}`},s}(r,n,l,0,u,i);t.tasks.push(e),c.clearForm(s),d()}}));const i=()=>{e.classList.remove("hide"),e.classList.add("show")},d=()=>{e.classList.remove("show"),e.classList.add("hide")}}(),function(){const e=e=>""===e,t=(e,t)=>{document.querySelector(".dateError").textContent=t};return{checkTitle:t=>{let o=!1;const r=t.value.trim();return e(r)?("Title cannot be empty.",document.querySelector(".titleError").textContent="Title cannot be empty."):(document.querySelector(".titleError").textContent="",o=!0),o},checkDescription:t=>{let o=!1;const r=t.value.trim();return e(r)?("Description cannot be empty.",document.querySelector(".descError").textContent="Description cannot be empty."):(document.querySelector(".descError").textContent="",o=!0),o},checkDate:o=>{let r=!1;const c=o.value.trim();return e(c)&&t(0,"Due date cannot be empty"),(e=>{const[t,o,r]=e.split("-"),c=new Date,n=c.getDate(),s=c.getMonth()+1;return!(+t>=c.getFullYear()&&+o>=s&&+r>=n)})(c)?t(0,"Due date must be in the future."):(document.querySelector(".dateError").textContent="",r=!0),r},clearForm:e=>{e.title.value="",e.description.value="",e.dueDate.value=""}}}());t.projects.forEach((e=>r.addProjectToView(e)))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,